{
  "version": 3,
  "sources": ["empty-module:~/shopify.server", "../../../app/routes/app.collections.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.collections.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.collections.tsx\");\n  import.meta.hot.lastModified = \"1709026958401.6426\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Card, Layout, Page, InlineGrid, ProgressBar, Badge } from \"@shopify/polaris\";\nimport { apiVersion, authenticate } from \"~/shopify.server\";\n// import {publicPath} from \"@remix-run/dev/server-build\";\n// @ts-ignore\nimport step1 from \"public/step1.webp\";\n// @ts-ignore\nimport step2 from \"public/step2.webp\";\n// @ts-ignore\nimport step3 from \"public/step3.webp\";\nexport const query = `\n{\n    collections(first: 10){\n        edges{\n            node{\n                id\n                handle\n                title\n                description\n            }\n        }\n        pageInfo {\n            hasNextPage\n        }\n    }\n}\n`;\n\n// utils.js or within your component file\nexport function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nexport const loader = async ({\n  request\n}) => {\n  const {\n    admin,\n    session\n  } = await authenticate.admin(request);\n  const {\n    shop,\n    accessToken\n  } = session;\n  const resAll = await admin.rest.resources.Shop.all({\n    session: session\n  });\n  // Assuming the request is successful, extract headers\n  const headers = resAll.headers;\n  const shopifyStoreId = headers['X-Shopid'][0]; // This will embed the Shopify store ID\n  const shopifyStoreUrl = session.shop;\n  try {\n    const response = await fetch(`https://${shop}/admin/api/${apiVersion}/graphql.json`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/graphql\",\n        \"X-Shopify-Access-Token\": accessToken\n      },\n      body: query\n    });\n    console.log('this is query=>', query);\n    if (response.ok) {\n      const data = await response.json();\n      const rest = await fetch(`https://transcript-combine-areas-miller.trycloudflare.com/djangoapp/shopify/status/?id=${shopifyStoreId}`, {\n        method: 'GET',\n        // Method is correct for fetching data\n        headers: {\n          // If specific headers are required, include them here\n          // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // Example for including an Authorization header\n        },\n        mode: 'no-cors' // Moved outside of headers, but consider the implications\n      });\n      const restdata = await rest.json();\n      console.log(restdata.status);\n      return restdata.status;\n    }\n    return null;\n  } catch (err) {\n    console.log(err);\n    console.log('this is catching !!!!!!');\n    return null;\n  }\n};\nconst Collections = () => {\n  _s();\n  const status = useLoaderData();\n  // Convert status to a number if it's not already\n  const numericStatus = Number(status);\n  let statusText;\n  switch (numericStatus) {\n    case 1:\n      statusText = \"Downloading\";\n      break;\n    case 2:\n      statusText = \"Indexing\";\n      break;\n    case 3:\n      statusText = \"Published\";\n      break;\n    default:\n      statusText = \"Unknown\";\n    // Default case if numericStatus doesn't match any case\n  }\n\n  // A simple function to determine the status for each placeholder\n  const determineStatus = index => {\n    return index < numericStatus ? 1 : 0;\n  };\n  const progressVal = status => {\n    return status * 33;\n  };\n  return <Page fullWidth>\n    <Layout>\n        <Layout.Section>\n          <Card>\n      <Badge tone=\"success\" progress=\"complete\" toneAndProgressLabelOverride=\"Status: Published. Your online store is visible.\">\n        {statusText}\n      </Badge>\n    </Card>\n\n\n\n        <SpacingBackground>\n          <InlineGrid gap=\"400\" columns={3}>\n            <Placeholder height=\"320px\" imageUrl={step1} status={determineStatus(0)} />\n\n            <Placeholder height=\"320px\" imageUrl={step2} status={determineStatus(1)} />\n            <Placeholder height=\"320px\" imageUrl={step3} status={determineStatus(2)} />\n          </InlineGrid>\n        </SpacingBackground>\n\n\n        <div style={{\n          width: '100%'\n        }}>\n          <ProgressBar progress={progressVal(status)} />\n        </div>\n\n      </Layout.Section>\n    </Layout>\n  </Page>;\n};\n_s(Collections, \"03pWJ/GUDaecbFH41mmPAw8ZTkM=\", false, function () {\n  return [useLoaderData];\n});\n_c = Collections;\nconst SpacingBackground = ({\n  children,\n  width = '100%'\n}) => {\n  return <div style={{\n    backgroundColor: \"white\",\n    width,\n    height: 'auto'\n  }}>\n      {children}\n    </div>;\n};\n_c2 = SpacingBackground;\nconst Placeholder = ({\n  height = 'auto',\n  width = 'auto',\n  imageUrl = '',\n  status = 0\n}) => {\n  const opacity = status === 0 ? 0.5 : 1;\n  return <div style={{\n    display: 'inherit',\n    backgroundImage: `url(${imageUrl})`,\n    // Set the image as background\n    backgroundSize: 'cover',\n    // Cover the entire div with the image; adjust as needed\n    backgroundPosition: 'center',\n    // Center the background image\n    height: height ?? undefined,\n    width: width ?? undefined,\n    opacity: opacity\n  }} />;\n};\n_c3 = Placeholder;\nexport default Collections;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Collections\");\n$RefreshReg$(_c2, \"SpacingBackground\");\n$RefreshReg$(_c3, \"Placeholder\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACYlB;AASA;AACAA;AACA,qBAAyC;;;;;;;;;;;;AA2HnC;AAjJN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAgGA,IAAM,cAAc,MAAM;AACxB,KAAG;AACH,QAAM,SAAS,cAAc;AAE7B,QAAM,gBAAgB,OAAO,MAAM;AACnC,MAAI;AACJ,UAAQ,eAAe;AAAA,IACrB,KAAK;AACH,mBAAa;AACb;AAAA,IACF,KAAK;AACH,mBAAa;AACb;AAAA,IACF,KAAK;AACH,mBAAa;AACb;AAAA,IACF;AACE,mBAAa;AAAA,EAEjB;AAGA,QAAM,kBAAkB,WAAS;AAC/B,WAAO,QAAQ,gBAAgB,IAAI;AAAA,EACrC;AACA,QAAM,cAAc,CAAAC,YAAU;AAC5B,WAAOA,UAAS;AAAA,EAClB;AACA,SAAO,mDAAC,QAAK,WAAS,MACpB,6DAAC,UACG,6DAAC,OAAO,SAAP,EACC;AAAA,uDAAC,QACL,6DAAC,SAAM,MAAK,WAAU,UAAS,YAAW,8BAA6B,oDACpE,wBADH;AAAA;AAAA;AAAA;AAAA,WAEA,KAHI;AAAA;AAAA;AAAA;AAAA,WAIN;AAAA,IAII,mDAAC,qBACC,6DAAC,cAAW,KAAI,OAAM,SAAS,GAC7B;AAAA,yDAAC,eAAY,QAAO,SAAQ,UAAU,eAAO,QAAQ,gBAAgB,CAAC,KAAtE;AAAA;AAAA;AAAA;AAAA,aAAyE;AAAA,MAEzE,mDAAC,eAAY,QAAO,SAAQ,UAAU,eAAO,QAAQ,gBAAgB,CAAC,KAAtE;AAAA;AAAA;AAAA;AAAA,aAAyE;AAAA,MACzE,mDAAC,eAAY,QAAO,SAAQ,UAAU,eAAO,QAAQ,gBAAgB,CAAC,KAAtE;AAAA;AAAA;AAAA;AAAA,aAAyE;AAAA,SAJ3E;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAGA,mDAAC,SAAI,OAAO;AAAA,MACV,OAAO;AAAA,IACT,GACE,6DAAC,eAAY,UAAU,YAAY,MAAM,KAAzC;AAAA;AAAA;AAAA;AAAA,WAA4C,KAH9C;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAvBA;AAAA;AAAA;AAAA;AAAA,SAyBF,KA1BF;AAAA;AAAA;AAAA;AAAA,SA2BA,KA5BK;AAAA;AAAA;AAAA;AAAA,SA6BP;AACF;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAM,oBAAoB,CAAC;AAAA,EACzB;AAAA,EACA,QAAQ;AACV,MAAM;AACJ,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,iBAAiB;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,EACV,GACK,YALE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,MAAM;AACN,IAAM,cAAc,CAAC;AAAA,EACnB,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AACX,MAAM;AACJ,QAAM,UAAU,WAAW,IAAI,MAAM;AACrC,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,SAAS;AAAA,IACT,iBAAiB,OAAO;AAAA;AAAA,IAExB,gBAAgB;AAAA;AAAA,IAEhB,oBAAoB;AAAA;AAAA,IAEpB,QAAQ,0BAAU;AAAA,IAClB,OAAO,wBAAS;AAAA,IAChB;AAAA,EACF,KAXO;AAAA;AAAA;AAAA;AAAA,SAWJ;AACL;AACA,MAAM;AACN,IAAO,0BAAQ;AACf,IAAI;AAAJ,IAAQ;AAAR,IAAa;AACb,aAAa,IAAI,aAAa;AAC9B,aAAa,KAAK,mBAAmB;AACrC,aAAa,KAAK,aAAa;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["init_esm", "status"]
}
